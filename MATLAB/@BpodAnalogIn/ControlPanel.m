function S = ControlPanel(obj, Op, varargin)

global BpodSystem

switch Op
    case 'init'
deltaY=22;
        % this is so ending the protocol closes the control panel
        % but find another solution.
        BpodSystem.ProtocolFigures.Figure = figure('Position', [1200 500 410 300],...
                                                    'name','Analog Input Control',...
                                                    'numbertitle','off',...
                                                    'MenuBar', 'none',...
                                                    'Resize', 'off');
        
        AMControl.SamplingRate.Panel = uipanel('Visible','on',...
                                                             'title','Sampling Rate (Hz)',...
                                                             'units', 'pixels',...
                                                             'Position',[20 60 100 100]);
                                         
        AMControl.SamplingRate.Edit = uicontrol(AMControl.SamplingRate.Panel,'Style', 'edit', ...
                                                  'String',obj.SamplingRate,...
                                             'Position', [20 60-deltaY 60 20],...
                                             'FontWeight', 'normal',...
                                             'FontName', 'Arial',...
                                             'HorizontalAlignment','Right');
                                         
        AMControl.nActiveChannels.Panel = uipanel('Visible','on',...
                                                             'title','# Active Channels',...
                                                             'units', 'pixels',...
                                                             'Position',[20 170 100 100]);

        % Create three radio buttons in the button group.
        

        AMControl.nActiveChannels = uicontrol(AMControl.nActiveChannels.Panel,...
                                                        'Style','popupmenu',...
                                                        'String',{'1','2','3','4','5','6','7','8'},...
                                                        'value', obj.nActiveChannels,...
                                                        'Position',[20 60-deltaY 60 20]);

        AMControl.VoltageRange.Panel = uipanel('Visible','on',...
                                                           'title','Voltage Range',...             
                                                           'units', 'pixels',...
                                                           'Position',[140 60 120 210]);

        % Create three radio buttons in the button group.
        deltaY=22;
        for i=1:8
            AMControl.VoltageRange.Channel(i) = uicontrol(AMControl.VoltageRange.Panel,...
                                                        'Style','popupmenu',...
                                                        'String',{'-10V,10V','-5V,+5V','-2.5V,2.5V','0V,10V'},...
                                                        'Position',[20 185-i*deltaY 80 20]);
        end
        
        AMControl.Thresholds.Panel = uipanel('Visible','on',...
                                                           'title','Threshold + Reset (V)',...             
                                                           'units', 'pixels',...
                                                           'Position',[270 60 130 210]);

        % Create three radio buttons in the button group.
        deltaY=22;
        for i=1:8
            AMControl.Thresholds.Channel(i) = uicontrol(AMControl.Thresholds.Panel,...
                                                        'Style','edit',...
                                                        'String','0',...
                                                        'Position',[20 185-i*deltaY 40 20]);
            AMControl.ResetValues.Channel(i) = uicontrol(AMControl.Thresholds.Panel,...
                                                        'Style','edit',...
                                                        'String','0',...
                                                        'Position',[70 185-i*deltaY 40 20]);
        end                                         
    
        S = AMControl;
        
    case 'retrieve'
        
        AMControl = varargin{1};
        S.nActiveChannels = cell2mat(get( AMControl.nActiveChannels, 'Value'));
        vranges = {};
        for i=1:4
            vranges{i,1}=[find([AMControl.VoltageRange.Channel.Value]==i)];
            vranges(i,2)=obj.ValidRanges(1,i);
        end
        S.VoltageRange = vranges;
        S.Thresholds = str2double(char(get( AMControl.Thresholds.Channel, 'String')));
        S.ResetValues = str2double(char(get( AMControl.ResetValues.Channel, 'String')));
        S.SamplingRate = str2double(AMControl.SamplingRate.Edit.String);  
end

